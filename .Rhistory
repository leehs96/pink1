BiocManager::install('edgeR')
library(edgeR)
BiocManager::install('GenomicFeatures')
library(GenomicFeatures)
mus.ens <- makeTxDbFromEnsembl(genome = 'Grcm38', tablename = "ensGene")
mus.ens <- makeTxDbFromEnsembl(genome = 'mm10', tablename = "ensGene")
mus.ens <- makeTxDbFromEnsembl(genome = "mm10", tablename = "ensGene")
mus.ens <- makeTxDbFromEnsembl(genome = "grcm38", tablename = "ensGene")
mus.ens <- makeTxDbFromGFF("Mus_musculus.GRCm38.101.chr.gtf")
mus.ens <- makeTxDbFromEnsembl("Mus_musculus.GRCm38.101.chr.gtf")
install.packages("RmariaDB")
install.packages("RMariaDB")
library(RMariaDB)
mus.ens <- makeTxDbFromEnsembl("Mus_musculus.GRCm38.101.chr.gtf")
mus.ens <- makeTxDbFromGFF ("Mus_musculus.GRCm38.101.chr.gtf")
mus.ens <- makeTxDbFromEnsembl(organism = "Mouse", server = "ensembldb.ensembl.org")
mus.ens <-  makeTxDbFromGFF('Homo_sapiens.GRCh38.93.gtf')
mus.ens <-  makeTxDbFromGFF('./Mus_musculus.GRCm38.101.gtf.gz')
mus.ens <-  makeTxDbFromGFF('./Mus_musculus.GRCm38.101.gtf')
mus.ens <-  makeTxDbFromGFF('Mus_musculus.GRCm38.101.gtf')
setwd('C:/Users/LEE HAN SAI/Desktop/Work/Pink1/Rscripts')
mus.ens <-  makeTxDbFromGFF('Mus_musculus.GRCm38.101.gtf')
all.genes <- genes(mus.ens)
View(all.genes)
all.genes@seqnames
all.genes@seqinfo
genes.length <- width(all.genes)
head(genes.length)
names(genes.length) <- all.genes$gene_id
head(genes.length)
write.csv(genes.length, "Mus_musculus.GRCm38.genelength_ensembl.txt")
read.table('Mus_musculus.GRCm38.genelength_ensembl.txt', header = T, sep = "/t" )
read.table('Mus_musculus.GRCm38.genelength_ensembl.txt', header = T, sep = "\t" )
read.table('Mus_musculus.GRCm38.genelength_ensembl.txt', header = TRUE, sep = "\t" )
Total_counts <- read.delim(
"Mus_musculus.GRCm38.genelength_ensembl.csv",
row.names = "gene"
)
Total_counts <- read.csv(
"Mus_musculus.GRCm38.genelength_ensembl.csv",
sep = ",",
header = T
)
View(Total_counts)
gene_length <- read.csv(
"Mus_musculus.GRCm38.genelength_ensembl.csv",
sep = ",",
header = T
)
gene_length <- read.csv(
"Mus_musculus.GRCm38.genelength_ensembl.csv",
sep = ",",
header = T,
row.names = 'gene'
)
View(gene_length)
files <- c(
'P2_HTseq_count',
'P4_HTseq_count',
'P6_HTseq_count',
'P8_HTseq_count',
'P9_HTseq_count',
'W5_HTseq_count',
'W6_HTseq_count',
'W7_HTseq_count',
'W8_HTseq_count',
'W9_HTseq_count',
)
source('C:/Users/LEE HAN SAI/Desktop/Work/pink1/Rscripts/edgeR.R', echo=TRUE)
files <- c(
'P2_HTseq_count.txt',
'P4_HTseq_count.txt',
'P6_HTseq_count.txt',
'P8_HTseq_count.txt',
'P9_HTseq_count.txt',
'W5_HTseq_count.txt',
'W6_HTseq_count.txt',
'W7_HTseq_count.txt',
'W8_HTseq_count.txt',
'W9_HTseq_count.txt'
)
names(files) <- c("P2","P4","P6","P8","P9","W5","W6","W7","W8","W9")
#tximport datafiles in directory
txData <- tximport(files,'htseq')
library(tximport)
#tximport datafiles in directory
txData <- tximport(files,'htseq')
#tximport datafiles in directory
txData <- tximport(files,'none')
files <- c(
'P2_HTseq_count.txt',
'P4_HTseq_count.txt',
'P6_HTseq_count.txt',
'P8_HTseq_count.txt',
'P9_HTseq_count.txt',
'W5_HTseq_count.txt',
'W6_HTseq_count.txt',
'W7_HTseq_count.txt',
'W8_HTseq_count.txt',
'W9_HTseq_count.txt'
)
setwd("C:/Users/LEE HAN SAI/Desktop/Work/Pink1")
ros_exp <- read.csv("ttest1_upper.csv", row.names = 1)
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
#set threshold
padj.cutoff <- 0.05
lfc.cutoff <- 0.58
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp <- data.frame(subset(ros_exp, baseMean >= 100))
#volcano
library(ggplot2)
library(ggrepel)
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
ros_exp <- read.csv("ttest1_upper.csv", row.names = 1)
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
#set threshold
padj.cutoff <- 0.05
lfc.cutoff <- 0.58
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp <- data.frame(subset(ros_exp, baseMean >= 100))
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
#set threshold
padj.cutoff <- 0.05
lfc.cutoff <- 0.58
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp <- data.frame(subset(ros_exp, baseMean >= 100))
#volcano
library(ggplot2)
library(ggrepel)
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
ros_list <- read.csv("ros_signal.csv", header = T)
View(ros_list)
ros_exp <- read.csv("ttest1_upper.csv", row.names = 1)
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
#set threshold
padj.cutoff <- 0.05
lfc.cutoff <- 0.58
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
ros_exp <- read.csv("ttest1_upper.csv", row.names = 1)
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
#set threshold
padj.cutoff <- 0.05
lfc.cutoff <- 0.58
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
ros_list <- read.csv("ros_signal.csv", header = T)
ros_exp$ros <- rownames(ros_exp) %in% ros_list$ros
ros_exp <- data.frame(subset(ros_exp, ros_exp$ros == TRUE))
threshold <- ros_exp$padj < padj.cutoff & abs(ros_exp$log2FoldChange) > lfc.cutoff
ros_exp$threshold <- threshold
ros_exp$genelabels <- TRUE
volcano <-
ggplot(ros_exp, aes(x = log2FoldChange, y = -log10(padj), color = threshold)) +
geom_point(size = 4) +
geom_text_repel(
colour = 'black',
size = 5,
aes(
x = log2FoldChange,
y = -log10(padj),
label = ifelse(threshold == T, rownames(ros_exp),""))
) +
ggtitle("ROS related gene expression") +
xlab("Log2 fold change") +
ylab("-Log10 adjusted p-value") +
theme(
legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))
) +
scale_x_continuous(limits=c(-10,10), breaks=seq(-10,10,2))
volcano
BiocManager::install("ArrayTools")
.libPaths()
.libPaths("C:/myRproject/Library")
.libPaths()
.libPaths()
BiocManager::install("ArrayTools")
